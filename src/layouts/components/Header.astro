---
import HeaderLink from './HeaderLink.astro';

const menu = [
	{
		link: '/about/',
		label: 'About',
		icon: 'user-circle'
	},
	{
		link: '/blog/',
		label: 'Blog',
		icon: 'article'
	},
	{
		link: '/projects/',
		label: 'Projects',
		icon: 'briefcase'
	}
];
---

<header id='site-header' class='flex items-center w-full transition-all duration-500 z-50 border-b border-neutral-200 dark:border-neutral-800 backdrop-blur-xl bg-white/80 dark:bg-neutral-900/80 sticky top-0 shadow-soft'>
	<div class='container mx-auto px-4 relative z-50'>
		<nav class='flex gap-4 items-center justify-between py-3'>
			<!-- Logo/Name with new theme -->
			<h2 class='m-0'>
				<a href='/' class='flex gap-3 items-center text-xl font-bold tracking-tight transition-all duration-300 group'> 
					<!-- Simplified logo for new theme -->
					<div class="relative w-12 h-12">
						
						<img src="/assets/logo/ai.png" alt="AI Logo" class="absolute inset-1 w-full h-full object-contain rounded-lg p-1" />
					</div>
					<span class='bg-gradient-to-r from-primary-600 to-accent-600 bg-clip-text text-transparent group-hover:from-primary-500 group-hover:to-accent-500 transition-all duration-500 text-3xl'>
						Tran Phuc Hau
					</span>
				</a>
			</h2>
			
			<!-- Mobile menu button with new styling -->
			<button id='menu-toggle' class='p-3 lg:hidden hover:bg-primary-100 dark:hover:bg-neutral-800 rounded-xl transition-all duration-300 transform hover:scale-110' aria-label='Toggle menu'>
				<svg
					xmlns='http://www.w3.org/2000/svg'
					class='icon icon-tabler icon-tabler-menu-2 w-6 h-6 text-neutral-700 dark:text-neutral-300'
					width='24'
					height='24'
					viewBox='0 0 24 24'
					stroke-width='2'
					stroke='currentColor'
					fill='none'
					stroke-linecap='round'
					stroke-linejoin='round'
				>
					<path stroke='none' d='M0 0h24v24H0z' fill='none'></path>
					<path d='M4 6l16 0'></path>
					<path d='M4 12l16 0'></path>
					<path d='M4 18l16 0'></path>
				</svg>
			</button>
			
			<!-- Desktop Navigation with new styling -->
			<ul class='hidden lg:flex items-center gap-1 relative z-50'>
				{
					menu.map((item) => (
						<li>
							<HeaderLink href={item.link} class='text-neutral-700 dark:text-neutral-300 hover:text-primary-600 dark:hover:text-primary-400 font-medium transition-all duration-300 px-4 py-2 rounded-lg hover:bg-primary-50/50 dark:hover:bg-neutral-800 relative group text-lg flex items-center gap-2'>
								{item.icon === 'user-circle' && (
									<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
										<path stroke-linecap="round" stroke-linejoin="round" d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
										<path stroke-linecap="round" stroke-linejoin="round" d="M12 10m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
										<path stroke-linecap="round" stroke-linejoin="round" d="M6.168 18.849a4 4 0 0 1 3.832 -2.849h4a4 4 0 0 1 3.834 2.855" />
									</svg>
								)}
								{item.icon === 'article' && (
									<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
										<path stroke-linecap="round" stroke-linejoin="round" d="M3 4m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
										<path stroke-linecap="round" stroke-linejoin="round" d="M7 8h10" />
										<path stroke-linecap="round" stroke-linejoin="round" d="M7 12h10" />
										<path stroke-linecap="round" stroke-linejoin="round" d="M7 16h10" />
									</svg>
								)}
								{item.icon === 'briefcase' && (
									<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
										<path stroke-linecap="round" stroke-linejoin="round" d="M3 7m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v9a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
										<path stroke-linecap="round" stroke-linejoin="round" d="M8 7v-2a2 2 0 0 1 2 -2h4a2 2 0 0 1 2 2v2" />
										<path stroke-linecap="round" stroke-linejoin="round" d="M12 12l0 .01" />
										<path stroke-linecap="round" stroke-linejoin="round" d="M3 13a20 20 0 0 0 18 0" />
									</svg>
								)}
								{item.label}
								<span class='absolute bottom-1 left-1/2 w-0 h-0.5 bg-gradient-to-r from-primary-500 to-accent-500 transition-all duration-500 group-hover:left-2 group-hover:w-3/4 rounded-full'></span>
							</HeaderLink>
						</li>
					))
				}
			</ul>
			
			<!-- Social Icons & Theme Toggle with new styling -->
			<div class='flex items-center gap-2 relative z-40'>
				
				
				<a class='p-3 bg-white dark:bg-neutral-800 hover:bg-primary-100 dark:hover:bg-neutral-700 rounded-lg transition-all duration-300 transform hover:scale-110 border border-neutral-200 dark:border-neutral-700 shadow-soft hover:shadow-medium' href='https://github.com/hautph' target='_blank' aria-label='GitHub'>
					<img src='/assets/img/github-mark.svg' width='20' height='20' alt='GitHub' loading='lazy' decoding='async' class='transition-transform duration-300 hover:scale-110 dark:hidden' />
					<img src='/assets/img/github-mark-white.svg' width='20' height='20' alt='GitHub' loading='lazy' decoding='async' class='transition-transform duration-300 hover:scale-110 hidden dark:block' />
				</a>
				<a class='p-3 bg-white dark:bg-neutral-800 hover:bg-primary-100 dark:hover:bg-neutral-700 rounded-lg transition-all duration-300 transform hover:scale-110 border border-neutral-200 dark:border-neutral-700 shadow-soft hover:shadow-medium' href='https://www.linkedin.com/in/hautph' target='_blank' aria-label='LinkedIn'>
					<svg width='20' height='20' fill='currentColor' viewBox='0 0 24 24' aria-hidden='true' class='text-neutral-700 dark:text-neutral-300 transition-transform duration-300 hover:scale-110'>
						<path d='M19 0h-14c-2.76 0-5 2.24-5 5v14c0 2.76 2.24 5 5 5h14c2.76 0 5-2.24 5-5v-14c0-2.76-2.24-5-5-5zm-11 19h-3v-9h3v9zm-1.5-10.28c-.97 0-1.75-.79-1.75-1.75s.78-1.75 1.75-1.75 1.75.79 1.75 1.75-.78 1.75-1.75 1.75zm15.5 10.28h-3v-4.5c0-1.08-.02-2.47-1.5-2.47-1.5 0-1.73 1.17-1.73 2.39v4.58h-3v-9h2.89v1.23h.04c.4-.75 1.38-1.54 2.84-1.54 3.04 0 3.6 2 3.6 4.59v4.72z'></path>
					</svg>
				</a>
			</div>
		</nav>
		
		<!-- Mobile Navigation (Hidden by default) -->
		<div id='mobile-menu' class='lg:hidden hidden py-4 border-t border-neutral-200 dark:border-neutral-800 animate-fade-in-down'>
			<ul class='space-y-3'>
				{
					menu.map((item) => (
						<li>
							<HeaderLink href={item.link} class='block py-3 px-6 text-neutral-700 dark:text-neutral-300 hover:text-primary-600 dark:hover:text-primary-400 font-medium rounded-lg hover:bg-primary-50/50 dark:hover:bg-neutral-800 text-lg transition-all duration-300 transform hover:translate-x-2 flex items-center gap-3'>
								{item.icon === 'user-circle' && (
									<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
										<path stroke-linecap="round" stroke-linejoin="round" d="M12 12m-9 0a9 9 0 1 0 18 0a9 9 0 1 0 -18 0" />
										<path stroke-linecap="round" stroke-linejoin="round" d="M12 10m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0" />
										<path stroke-linecap="round" stroke-linejoin="round" d="M6.168 18.849a4 4 0 0 1 3.832 -2.849h4a4 4 0 0 1 3.834 2.855" />
									</svg>
								)}
								{item.icon === 'article' && (
									<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
										<path stroke-linecap="round" stroke-linejoin="round" d="M3 4m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v12a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
										<path stroke-linecap="round" stroke-linejoin="round" d="M7 8h10" />
										<path stroke-linecap="round" stroke-linejoin="round" d="M7 12h10" />
										<path stroke-linecap="round" stroke-linejoin="round" d="M7 16h10" />
									</svg>
								)}
								{item.icon === 'briefcase' && (
									<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
										<path stroke-linecap="round" stroke-linejoin="round" d="M3 7m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v9a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z" />
										<path stroke-linecap="round" stroke-linejoin="round" d="M8 7v-2a2 2 0 0 1 2 -2h4a2 2 0 0 1 2 2v2" />
										<path stroke-linecap="round" stroke-linejoin="round" d="M12 12l0 .01" />
										<path stroke-linecap="round" stroke-linejoin="round" d="M3 13a20 20 0 0 0 18 0" />
									</svg>
								)}
								{item.label}
							</HeaderLink>
						</li>
					))
				}
				
				<li class='pt-3'>
					<div class='flex items-center gap-4 px-6'>
						<span class='text-neutral-700 dark:text-neutral-300'>Follow:</span>
						<a class='p-2 bg-white dark:bg-neutral-800 hover:bg-primary-100 dark:hover:bg-neutral-700 rounded-lg transition-all duration-300 border border-neutral-200 dark:border-neutral-700 shadow-soft' href='https://github.com/hautph' target='_blank' aria-label='GitHub'>
							<img src='/assets/img/github-mark.svg' width='20' height='20' alt='GitHub' loading='lazy' decoding='async' class='dark:hidden' />
							<img src='/assets/img/github-mark-white.svg' width='20' height='20' alt='GitHub' loading='lazy' decoding='async' class='hidden dark:block' />
						</a>
						<a class='p-2 bg-white dark:bg-neutral-800 hover:bg-primary-100 dark:hover:bg-neutral-700 rounded-lg transition-all duration-300 border border-neutral-200 dark:border-neutral-700 shadow-soft' href='https://www.linkedin.com/in/hautph' target='_blank' aria-label='LinkedIn'>
							<svg width='20' height='20' fill='currentColor' viewBox='0 0 24 24' aria-hidden='true' class='text-neutral-700 dark:text-neutral-300'>
								<path d='M19 0h-14c-2.76 0-5 2.24-5 5v14c0 2.76 2.24 5 5 5h14c2.76 0 5-2.24 5-5v-14c0-2.76-2.24-5-5-5zm-11 19h-3v-9h3v9zm-1.5-10.28c-.97 0-1.75-.79-1.75-1.75s.78-1.75 1.75-1.75 1.75.79 1.75 1.75-.78 1.75-1.75 1.75zm15.5 10.28h-3v-4.5c0-1.08-.02-2.47-1.5-2.47-1.5 0-1.73 1.17-1.73 2.39v4.58h-3v-9h2.89v1.23h.04c.4-.75 1.38-1.54 2.84-1.54 3.04 0 3.6 2 3.6 4.59v4.72z'></path>
							</svg>
						</a>
					</div>
				</li>
			</ul>
		</div>
	</div>

	<style is:global>
		@keyframes fade-in-down {
			0% {
				opacity: 0;
				transform: translateY(-10px);
			}
			100% {
				opacity: 1;
				transform: translateY(0);
			}
		}
		
		@keyframes pulse-slow {
			0% {
				box-shadow: 0 0 0 0 rgba(59, 130, 246, 0.4);
			}
			70% {
				box-shadow: 0 0 0 10px rgba(59, 130, 246, 0);
			}
			100% {
				box-shadow: 0 0 0 0 rgba(59, 130, 246, 0);
			}
		}
		
		.animate-fade-in-down {
			animation: fade-in-down 0.3s ease-out forwards;
		}
		
		.animate-pulse-slow {
			animation: pulse-slow 3s infinite;
		}
		
		.animation-delay-1000 {
			animation-delay: 1s;
		}
		
		.dark #themeToggle .sun {
			display: none;
		}
		.dark #themeToggle .moon {
			display: block;
		}
		
		/* Enhanced Header scroll effect */
		#site-header {
			transition: all 0.4s cubic-bezier(0.22, 0.61, 0.36, 1);
			border-bottom: 1px solid rgba(0, 0, 0, 0.05);
		}
		
		.scrolled #site-header {
			box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
			background-color: rgba(255, 255, 255, 0.95);
			padding-top: 0.5rem;
			padding-bottom: 0.5rem;
		}
		
		.dark .scrolled #site-header {
			background-color: rgba(23, 23, 23, 0.95);
			box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
		}
		
		/* Enhanced hover effects for navigation */
		#site-header nav ul li a {
			position: relative;
			overflow: hidden;
		}
		
		#site-header nav ul li a::before {
			content: '';
			position: absolute;
			top: 0;
			left: -100%;
			width: 100%;
			height: 100%;
			background: linear-gradient(90deg, transparent, rgba(59, 130, 246, 0.1), transparent);
			transition: 0.5s;
		}
		
		#site-header nav ul li a:hover::before {
			left: 100%;
		}
	</style>

	<script is:inline>
		function sendMessage(message) {
			const iframe = document.querySelector('iframe.giscus-frame');
			if (!iframe) return;
			iframe.contentWindow.postMessage({ giscus: message }, 'https://giscus.app');
		}

		const handleToggleClick = () => {
			const isDark = document.documentElement.classList.contains('dark');
			const newTheme = isDark ? 'light' : 'dark';
			window.setTheme(newTheme);
			if (newTheme === 'dark') {
				sendMessage({ setConfig: { theme: 'dark_dimmed' } });
			} else {
				sendMessage({ setConfig: { theme: 'light' } });
			}
			
			// Toggle moon/sun icons for both desktop and mobile
			const sunIcons = document.querySelectorAll('#themeToggle .sun, #mobile-themeToggle .sun');
			const moonIcons = document.querySelectorAll('#themeToggle .moon, #mobile-themeToggle .moon');
			sunIcons.forEach(icon => icon.classList.toggle('hidden'));
			moonIcons.forEach(icon => icon.classList.toggle('hidden'));
		};
		
		document.getElementById('themeToggle')?.addEventListener('click', handleToggleClick);
		document.getElementById('mobile-themeToggle')?.addEventListener('click', handleToggleClick);
		
		// Mobile menu toggle
		document.getElementById('menu-toggle')?.addEventListener('click', () => {
			const mobileMenu = document.getElementById('mobile-menu');
			if (mobileMenu) {
				mobileMenu.classList.toggle('hidden');
			}
		});

		// Header scroll effect
		window.addEventListener('scroll', () => {
			if (window.scrollY > 50) {
				document.body.classList.add('scrolled');
			} else {
				document.body.classList.remove('scrolled');
			}
		});
		
		// Close mobile menu when clicking on a link
		document.querySelectorAll('#mobile-menu a').forEach(link => {
			link.addEventListener('click', () => {
				const mobileMenu = document.getElementById('mobile-menu');
				if (mobileMenu) {
					mobileMenu.classList.add('hidden');
				}
			});
		});
	</script>
</header>